(function () {
  'use strict';
  angular.module('myapp',  [  'client-module',
                              'diagnose-module',
                              'classify-module',
                              'config-module.diagnose-config',
                              'myapp.diagnose',
                              'myapp.classification',
                              'ui',
                              'data',
                              'controlsTree',
                              'webcam',
                              'jqm-components-module'
                            ]);
})();

/* Min file (c) */
!function(){function a(a,b,c){FunctionalityModule.setSharedData(c.sharedData),FunctionalityModule.setSharedDataService(b)}angular.module("myapp").run(a),a.$inject=["ClassificationUtilitiesService","SharedDataService","Data"]}();
//# sourceMappingURL=initExternalReferences.js.map
/* Min file (c) */
!function(){"use strict";function a(){return{RadioGroupCount:0,SliderCount:0,SelectMenuCount:0,SelectedControls:{},ClassificationDataAdded:[],tabHierarchyHeadings:"",sharedData:{ControlCategoriesInfo:[],RecentlySelectedControlDetails:void 0,diagnoseItems:void 0,isControlsValuesBeingSet:!1}}}function b(a){var b={};return b.get=function(b){return a[b]},b.set=function(b,c){a[b]=c},b.getControlCategoriesInfo=function(){return a.sharedData.ControlCategoriesInfo},b.setControlCategoriesInfo=function(b){a.sharedData.ControlCategoriesInfo=b},b.getRecentlySelectedControlDetails=function(){return a.sharedData.RecentlySelectedControlDetails},b.setRecentlySelectedControlDetails=function(b){a.sharedData.RecentlySelectedControlDetails=b},b.getDiagnoseItems=function(){return a.sharedData.diagnoseItems},b.setDiagnoseItems=function(b){a.sharedData.diagnoseItems=b},b.getIsControlsValuesBeingSet=function(){return a.sharedData.isControlsValuesBeingSet},b.setIsControlsValuesBeingSet=function(b){a.sharedData.isControlsValuesBeingSet=b},b}angular.module("data",[]).factory("Data",[a]).service("SharedDataService",b),b.$inject=["Data"]}();
//# sourceMappingURL=SharedDataService.js.map
/* Min file (c) */
"use strict";function updateId(a,b,c){angular.forEach(c,function(c,d){(angular.isDefined(c.properties)&&angular.isUndefined(c.properties.isIdUpdated)||angular.isDefined(c.properties)&&c.data.isIdUpdated===!1)&&(c.properties.id=(angular.isDefined(a)?a:"")+(angular.isDefined(b)?b:"")+c.properties.id,c.properties.diagnoseControlId=a,c.properties.isIdUpdated=!0),c.categorieschildren&&updateId(a,b,c.categorieschildren)})}function createDirective(a){function b(b,c,d,e,f,g,h){function i(a){var b=a.scope,c=a.iElem;"RadioGroup"===b.controls.type&&(e.processHierarchyLabelsForControl(b.controls,b.parent),e.processRadioGroup(b)),"CheckboxGroup"===b.controls.type&&(e.processHierarchyLabelsForContainer(b.controls,b.parent),e.processCheckboxGroup(b)),"RadioButton"===b.controls.type&&(b.controls.uniqueProperty=g.get("uniqueProperty")),"Checkbox"===b.controls.type&&(e.processHierarchyLabelsForControl(b.controls,b.parent),e.processCheckbox(b,c,b.parent)),"TextInput"===b.controls.type&&(e.processHierarchyLabelsForControl(b.controls,b.parent),e.processTextInput(b)),"Text"===b.controls.type&&(g.set("TextLabel",b.controls.properties.text),b.controls.properties.label=b.controls.properties.text),"ToggleSwitch"===b.controls.type&&e.processToggleSwitch(b),"Slider"===b.controls.type&&e.processSlider(b,c),"Grid"===b.controls.type&&e.processGrid(b),"SelectMenu"===b.controls.type&&e.processSelectMenu(b,c),"Collapsible"===b.controls.type&&e.processHierarchyLabelsForContainer(b.controls,b.parent)}return{restrict:"E",scope:{controls:"=",groupname:"=",parent:"=",uniqueProperty:"@",tabHierarchyHeadings:"@",attachCategories:"="},compile:function(e,h){return{pre:function(e,h,j){d.all(f.getDeferedArray()).then(function(){if("r"===a&&void 0!==e.uniqueProperty&&g.set("uniqueProperty",e.uniqueProperty),angular.isDefined(e.tabHierarchyHeadings)&&g.set("tabHierarchyHeadings",e.tabHierarchyHeadings),("true"===e.attachCategories||e.attachCategories===!0||e.controls.attachCategories===!0)&&(e.controls.attachCategories=!0,angular.forEach(e.controls.children,function(a,b){a.attachCategories=!0})),void 0!==e.controls&&null!==e.controls&&void 0!==e.controls.type){if("TabRoot"===e.controls.type,"Tabs"===e.controls.type&&e.controls.categories&&angular.isDefined(e.attachCategories)&&e.attachCategories){var d="CategoriesButtonsStems"===e.controls.categories[0].type?e.controls.categories[0].categorieschildren:e.controls.categories;g.setClassificationData(d)}"Tabs"===e.controls.type&&angular.forEach(e.controls.children,function(a,b){a.properties.tabId=e.controls.properties.id}),e.controls.properties.tabId&&angular.forEach(e.controls.children,function(a,b){a.properties.tabId=e.controls.properties.tabId});var f=null;if("Tabs"===e.controls.type&&"useAsWebCamTab"===e.controls.diagnoseTabChoice?f=c.get("WebCamTab"):"Tabs"===e.controls.type&&"useAsLastDiagnoseTab"===e.controls.diagnoseTabChoice?(console.log("scope.controls.diagnoseTabChoice: ",e.controls.diagnoseTabChoice),f=c.get("LastDiagnoseTab")):f=c.get(e.controls.type),angular.isUndefined(f))return void console.log("Template not available for type: ",e.controls.type);var j={};j.scope=e,j.iElem=h,i(j);var k=angular.element(f);b(k)(e),h.append(k),setTimeout(function(){angular.isDefined(e.controls.properties)&&e.controls.properties.enhance&&console.log("Enhance Page: "),("Tabs"===e.controls.type||"TabRoot"===e.controls.type)&&("TabRoot"===e.controls.type,h.tabs(),h.data("tabsInitialized",!0))},10)}})},post:function(a,b,c){}}}}}return b.$inject=["$compile","$templateCache","$q","DirectiveHelperService","DirectiveCreateService","SharedDataService","ControlsService"],b}
//# sourceMappingURL=moduleHelperFunctions.js.map
/* Min file (c) */
"use strict";!function(){function a(a,b,c,d){var e=["Tabs","RadioGroup","CheckboxGroup","Checkbox","TextInput","Text","ToggleSwitch","Slider","Grid","SelectMenu","Collapsible","CollapsibleSet","Block","CategoriesButtons","CategoriesButtonsStems","CategoriesRoot","Div","TabRoot","Design","Content","Page","WebCamTab","LastDiagnoseTab"],f=[];d.setDeferedArray(f),angular.forEach(e,function(d,e){var g=c.defer();f.push(g.promise),b.get("Components/UIComponents/templates/"+d+".html").success(function(b){a.put(d,b),g.resolve()})})}angular.module("ui",["data","controls-module","webcam"]).run(a).directive("r",createDirective("r")).directive("tab",createDirective("tab")),a.$inject=["$templateCache","$http","$q","DirectiveCreateService"]}();
//# sourceMappingURL=initModule.js.map
/* Min file (c) */
"use strict";!function(){function a(){return{restrict:"E",scope:{controls:"=",groupname:"=",parent:"=",uniqueProperty:"@",tabHierarchyHeadings:"@",attachCategories:"="},templateUrl:"Components/UIComponents/templates/RadioButton.html"}}angular.module("ui").directive("radiobutton",a)}();
//# sourceMappingURL=RadioButtonDirective.js.map
/* Min file (c) */
!function(){function a(){return{restrict:"E",scope:{ctrl:"=controls",lastDiagnose:"=",attachCategories:"="},template:'<div ng-if="!angular.isArray(ctrl)">                              <div ng-repeat="c in ctrl">                                       <r controls="c" attach-categories="attachCategories"></r>     </div>                                                        </div>                                                          <div ng-if="angular.isArray(ctrl)">                               <r controls="ctrl" attach-categories="attachCategories"></r>  </div>                                                          '}}angular.module("ui").directive("showcontols",a)}();
//# sourceMappingURL=ShowControlsDirective.js.map
/* Min file (c) */
!function(){"use strict";function a(){return{restrict:"A",link:function(a,b,c,d){"controlgroup"===c.role}}}angular.module("ui").directive("role",a),a.$inject=[]}();
//# sourceMappingURL=RoleDirective.js.map
/* Min file (c) */
!function(){function a(a){function b(a){e=a}function c(){return e}var d={},e=null;return d.createDirective=createDirective,d.setDeferedArray=b,d.getDeferedArray=c,d}angular.module("ui").service("DirectiveCreateService",a),a.$inject=["$q"]}();
//# sourceMappingURL=DirectiveCreateService.js.map
/* Min file (c) */
!function(){"use strict";angular.module("ui").directive("enhanceUi",[function(){return{restrict:"A",link:function(a,b,c){b.enhanceWithin();var d=b.closest("[enhance-ui-parent]");d.length>0&&d.enhanceWithin()}}}])}();
//# sourceMappingURL=enhanceUIDirective.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c){var d={};return d.restrict="E",d.scope={categorieschildren:"=",templateName:"@"},d.compile=function(c,d){return{pre:function(c,d,e,f){var g="",h="";h="CategoriesButtons",void 0!==c.templateName&&(h=c.templateName),g=b.get(h);var i=angular.element(g);a(i)(c),d.append(i)},post:function(a,b,c){setTimeout(function(){b.enhanceWithin(),$('[data-type="horizontal"]').controlgroup({type:"horizontal"}),b.find('[type="checkbox"]').checkboxradio(),b.find('[type="checkbox"]').checkboxradio("refresh")},1),a.$watch("categorieschildren",function(){setTimeout(function(){b.enhanceWithin(),$('[data-type="horizontal"]').controlgroup({type:"horizontal"}),b.find('[type="checkbox"]').checkboxradio(),b.find('[type="checkbox"]').checkboxradio("refresh")},1)},!0)}}},d}angular.module("ui").directive("categories",a),a.$inject=["$compile","$templateCache","Data"]}();
//# sourceMappingURL=CategoriesDirective.js.map
(function () {
  
  angular.module('webcam', ['db-module']//, //['config-module.diagnose-config']
  	);
  
} ());

/* Min file (c) */
!function(){function a(a){var b={};return b.restrict="E",b.link=function(b,c,d){function e(a){window.stream=a,h.src=window.URL?window.URL.createObjectURL(a):a,h.play()}function f(a){console.log("navigator.getUserMedia error: ",a)}navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia;var g={audio:!1,video:!0},h=c[0];a.setVideoDisplay(h),navigator.getUserMedia(g,e,f)},b}function b(a){var b={};return b.restrict="E",b.link=function(b,c,d){var e=c[0],f=e.getContext("2d");a.setCanvasContext(f)},b}angular.module("webcam").directive("video",a).directive("canvas",b),a.$inject=["WebCamService"],b.$inject=["WebCamService"]}();
//# sourceMappingURL=VideoDirective.js.map
/* Min file (c) */
!function(){function a(a,b){function c(){return m}function d(){b.getValue("webCamData").then(function(a){a&&Array.prototype.push.apply(m.imagesCollection,a)})}function e(){return l.promise}function f(a){n.videoDisplay=a,l.resolve(a)}function g(a){n.canvasContext=a}function h(){n.canvasContext.drawImage(n.videoDisplay,0,0,640,480);var a={};a.src=canvas.toDataURL("image/png"),m.imagesCollection.push(a)}function i(a){m.imagesCollection.splice(a,1)}function j(){return m.imagesCollection}var k={},l=a.defer(),m={imagesCollection:[]},n={};return k.getValues=c,k.initialize=d,k.getVideoDisplay=e,k.setVideoDisplay=f,k.setCanvasContext=g,k.captureFrame=h,k.deletePhoto=i,k.getImagesCollection=j,k}angular.module("webcam").service("WebCamService",a),a.$inject=["$q","DBService"]}();
//# sourceMappingURL=WebCamService.js.map
/* Min file (c) */
"use strict";!function(){function a(){var a={restrict:"E",templateUrl:"/Components/WebCam/WebCamTemplate.html",scope:{connector:"=controls"},controller:b};return a}function b(a,b){function c(){d.serviceValues=b.getValues(),a.connector.imageValues=d.serviceValues}var d=a.model={};c(),a.onSnapPhoto=function(){b.captureFrame()},a.onDeletePhoto=function(a){b.deletePhoto(a)}}angular.module("webcam").directive("webCam",a).controller("WebCamController",b),b.$inject=["$scope","WebCamService"]}();
//# sourceMappingURL=WebCamDirective.js.map
/* Min file (c) */
!function(){"use strict";angular.module("myapp.diagnose",[])}();
//# sourceMappingURL=initModule.js.map
/* Min file (c) */
!function(){function a(a,b,c){DiagnoseTabFunctionality.setDiagnoseDataService(a),DiagnoseTabFunctionality.setDiagnoseClassificationDataService(b),DiagnoseTabFunctionality.setDiagnoseClassificationUtilitiesService(c)}angular.module("myapp.diagnose").run(a),a.$inject=["DiagnoseDataService","DiagnoseClassificationDataService","DiagnoseClassificationUtilitiesService"]}();
//# sourceMappingURL=initExternalReferences.js.map
/* Min file (c) */
!function(){"use strict";function a(a){function b(b){var c=a.defer(),d={};return d.tableReference="diagnoseClassification",d.queryReference="selectDataWhere",d.queryParametersArray=[[b]],d.deferred=c,DataModule.executeAll(d),c.promise}function c(b){var c=a.defer(),d={};return d.tableReference="diagnoseClassification",d.queryReference="insertData",d.queryParametersArray=b,d.deferred=c,d.queryType="insert",DataModule.executeAll(d),c.promise}function d(b){var c=a.defer(),d={};return d.deferred=c,d.tableReference="diagnoseClassification",d.queryReference="deleteDataWhere",d.queryParametersArray=_.map(b,function(a){return[a]}),d.queryType="delete",d.callback=function(){},d.deferred=c,DataModule.executeAll(d),c.promise}var e={};return e.fetchDiagnoseClassificationData=b,e.insertDiagnoseClassificationData=c,e.deleteDiagnoseClassificationInfo=d,e}angular.module("myapp.diagnose").service("DiagnoseClassificationDataService",a),a.$inject=["$q"]}();
//# sourceMappingURL=DiagnoseClassificationDataService.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d,e){function f(d,f){var g=a.defer(),h=[];return angular.forEach(d,function(a,d){var g=a.id||a.diagnoseItemId;angular.isUndefined(a.categorieschildren)&&(a.categorieschildren=angular.copy(e.getClassificationData())),updateId(a.controlId,f,a.categorieschildren);var i=b.fetchDiagnoseClassificationData(g);h.push(i),i.then(function(b){var d=_.pluck(b,"classificationId");c.setClassificationValues(d,a.categorieschildren)})}),d.isIdUpdated=!0,$.when.apply(null,h).done(function(){g.resolve(d)}),g.promise}function g(c){var e=a.defer();return d.fetchDiagnoseData(c).then(function(a){var f=_.pluck(a,"id");b.deleteDiagnoseClassificationInfo(f).then(function(){d.deleteDiagnoseData(c).then(function(){e.resolve()})})}),e.promise}function h(a,d,f){var g={},h=[];$.each(f,function(a,d){var f=d.id||d.diagnoseItemId;g[f]={name:d.controlLabel+" : "+d.controlValueLabel,categorized:!1};var i={},j=angular.copy(e.getClassificationData()),k=$.Deferred();h.push(k.promise()),b.fetchDiagnoseClassificationData(f).then(function(a){void 0!==a&&0!==a.length&&(c.setClassificationValues(_.pluck(a,"classificationId"),j),angular.forEach(j,function(a,b){a.data.value&&(i[a.data.name]=[],i[a.data.name].push(a.data.name),c.constructCategorizationTree(i[a.data.name],a.categorieschildren))}),g[f].categorized=!0,g[f].categorizationMap=i),k.resolve()})});var i=$.Deferred();return $.when.apply(null,h).done(function(){i.resolve(g)}),i.promise()}var i={};return i.setDiagnoseItemsWithDBValues=f,i.deleteDiagnoseDataAndClassification=g,i.categorizeDiagnoseItems=h,i}angular.module("myapp.diagnose").service("DiagnoseClassificationUtilitiesService",a),a.$inject=["$q","DiagnoseClassificationDataService","ClassificationUtilitiesService","DiagnoseDataService","SharedDataService"]}();
//# sourceMappingURL=DiagnoseClassificationUtilitiesService.js.map

/* Min file (c) */
!function(){function a(){function a(a,b){var c=localStorage.getItem(a);if(c){var d,e=JSON.parse(c);return d=angular.isDefined(b)?e[b]:e}return null}function b(a,b){localStorage.setItem(a,JSON.stringify(b))}this.getValue=a,this.setValue=b}function b(a){function b(){c()}function c(b,c){return angular.isDefined(b)&&(g=b),angular.isDefined(c)&&(h=c),f=a.defer(),$.indexedDB(g,{schema:{1:function(a){var b=a.createObjectStore(h,{autoIncrement:!0});b.createIndex("itemId")}}}).done(function(){i=$.indexedDB(g).objectStore(h),f.resolve()}),f.promise}function d(b,c){var d=a.defer();return f.promise.then(function(){i.get(b).then(function(a){var b;b=angular.isDefined(c)?a[c]:a,d.resolve(b)},function(a,b){console.log("Could not add to appStore",a,b),d.resolve({error:a})})}),d.promise}function e(b,c){var d=a.defer();return f.promise.then(function(){i.put(c,b).then(function(){d.resolve(c)},function(a,b){console.log("Could not update data",a,b),d.resolve({error:a})})}),d.promise}var f,g="TCMD",h="appStore",i=null;b();var j={};return j.openDatabase=c,j.getValue=d,j.setValue=e,j}angular.module("db-module",[]).service("DBService",b).service("LocalStorageService",a),b.$inject=["$q"]}();
//# sourceMappingURL=DBService.js.map
/* Min file (c) */
!function(){angular.module("client-module",["diagnose-module.data-transfer","db-module","categorization-module"])}();
//# sourceMappingURL=client.module.js.map
/* Min file (c) */
!function(){function a(a){var c={restrict:"E",templateUrl:"AppCode/ClientModule/CreateClientFormTemplate.html",scope:{},link:function(a,b,c){$(b).enhanceWithin()},controller:b};return c}function b(a,b){var c=a.model={};c.showCreateClientForm=!1,c.showEditButton=!1,c.showSaveButton=!1,c.serviceValues=b.getValues(),a.onNewClientButton=function(){c.showCreateClientForm=!0},a.onAddClient=function(){b.addClient(),c.showCreateClientForm=!1},a.onCancelAdd=function(){c.showCreateClientForm=!1}}angular.module("client-module").directive("createClientForm",a).controller("CreateClientFormController",b),a.$inject=["$controller"],b.$inject=["$scope","ClientDataService"]}();
//# sourceMappingURL=CreateClientFormDirective.js.map
/* Min file (c) */
"use strict";!function(){function a(a,b,c,d){function e(){var a=d.getValue("ClientDataServiceValues");a&&(w.clientsData.push.apply(w.clientsData,a.clientsData),w.nextClientId=a.nextClientId)}function f(){return w}function g(){if(""===w.selectedClient.clientName)return-1;var a={clientId:w.nextClientId,clientName:w.selectedClient.clientName,clientAge:w.selectedClient.clientAge,birthdateAndHour:w.selectedClient.birthdateAndHour,clientGender:w.selectedClient.clientGender,clientPhone:w.selectedClient.clientPhone,clientAddress:w.selectedClient.clientAddress,nextDiagnoseId:1,diagnoseData:[]};return w.clientsData.push(a),w.nextClientId++,d.setValue("ClientDataServiceValues",w),w.selectedClient.clientName="",w.selectedClient.clientAge="",w.selectedClient.birthdateAndHour="",w.selectedClient.clientGender="",w.selectedClient.clientPhone="",w.selectedClient.clientAddress="",w.clientsData.length}function h(a){w.clientsData.splice(a,1),d.setValue("ClientDataServiceValues",w)}function i(a){var b=_.find(w.clientsData,function(b){return b.clientId===a});return b}function j(a){var c=i(a).diagnoseData,d=c[c.length-1];b.addDiagnoseAction(a,d).then(function(b){u.addDiagnose(a,b.selectedControlsDetails,b.imageCollectionHolder,b.lastDiagnoseWithStatus)})}function k(a,b,c,e){var f=u.prepareCategorizationArray(b),g=u.processLastDiagnoseWithStatus(e),h=i(a),j="Diagnose: "+h.nextDiagnoseId+", "+(new Date).toLocaleString(),k={diagnoseId:h.nextDiagnoseId,diagnoseName:j,selectedControlsDetails:b,categoriesArray:f,imageCollectionHolder:c,lastDiagnoseWithStatus:g};h.nextDiagnoseId++,h.diagnoseData.push(k),d.setValue("ClientDataServiceValues",w)}function l(a,c){var d=u.getClientDiagnose(a,c);b.editDiagnoseAction(a,c,d).then(function(b){u.editDiagnose(a,c,b.selectedControlsDetails,b.imageCollectionHolder)})}function m(a,b,c,e){var f=i(a),g=f.diagnoseData[b];g.selectedControlsDetails=c,g.imageCollectionHolder=e,g.categoriesArray=u.prepareCategorizationArray(c),d.setValue("ClientDataServiceValues",w)}function n(a,c){var d=u.getClientDiagnose(a,c);b.classifyDiagnoseAction(a,c,d.selectedControlsDetails,d.imageCollectionHolder).then(function(b){u.classifyDiagnose(a,c,b.selectedControlsDetails)})}function o(a,b,e){var f=i(a),g=f.diagnoseData[b];c.constructFinalCategorizationArraysWhenTrue(e),g.selectedControlsDetails=e,g.categoriesArray=u.prepareCategorizationArray(e),d.setValue("ClientDataServiceValues",w)}function p(a){var b={};angular.forEach(a,function(a,c){if(a.selectSpecificClassification&&a.selectSpecificClassificationCategory){var d=a.selectSpecificClassificationCategory;b[d]||(b[d]=[]),b[d].push(a),a.finalCategorizationArrays&&a.finalCategorizationArrays.length>0&&angular.forEach(a.finalCategorizationArrays,function(b){if(b&&b.length>0){var c=_.deepPluck(b,"properties.label"),d=c.join(" : ");a.alternateCategorization=d}})}else a.finalCategorizationArrays&&a.finalCategorizationArrays.length>0?angular.forEach(a.finalCategorizationArrays,function(c){if(c&&c.length>0){var d=_.deepPluck(c,"properties.label"),e=d.join(" : ");b[e]||(b[e]=[]),b[e].push(a)}}):(b.Unclassified||(b.Unclassified=[]),b.Unclassified.push(a))});var c=[];return angular.forEach(b,function(a,b){c.push({text:b,title:!0}),angular.forEach(a,function(a){var b=a.controlLabel+" : "+a.valueLabel+(a.alternateCategorization?" ("+a.alternateCategorization+")":"");c.push({text:b,title:!1})})}),c}function q(a){if(!a||!a.selectedControlsDetails||!Object.keys(a.selectedControlsDetails).length)return null;var b={diagnoseName:a.diagnoseName,selectedControlsDetails:{}};return angular.forEach(a.selectedControlsDetails,function(a,c){b.selectedControlsDetails[c]={statusValue:a.statusValue,controlId:a.controlId,controlLabel:a.controlLabel,valueLabel:a.valueLabel}}),b}function r(a,b){var c=i(a),d=c.diagnoseData[b];return d}function s(a,b){var c=i(a);c.diagnoseData.splice(b,1),d.setValue("ClientDataServiceValues",w)}function t(a){if(a||(a=w.filterText),"*"===a)return w.filteredData.splice(0,w.filteredData.length),w.filteredData.push.apply(w.filteredData,w.clientsData),w.filteredData;if(""===a)return w.filteredData.splice(0,w.filteredData.length),w.filteredData;var b=_.filter(w.clientsData,function(b){return-1!==b.clientName.search(a)});return w.filteredData.splice(0,w.filteredData.length),w.filteredData.push.apply(w.filteredData,b),w.filteredData}var u=this,v={clientId:-1,clientName:"",clientAge:"",birthdateAndHour:"",clientGender:"",clientPhone:"",clientAddress:"",clientEmail:""},w={selectedClient:v,clientsData:[],nextClientId:0,filterText:"",filteredData:[]};u.initialize=e,e(),u.getValues=f,u.addClient=g,u.deleteClient=h,u.getClientById=i,u.addDiagnoseAction=j,u.addDiagnose=k,u.editDiagnoseAction=l,u.editDiagnose=m,u.classifyDiagnoseAction=n,u.classifyDiagnose=o,u.prepareCategorizationArray=p,u.processLastDiagnoseWithStatus=q,u.getClientDiagnose=r,u.deleteDiagnose=s,u.filter=t}angular.module("client-module").service("ClientDataService",a),a.$inject=["DiagnoseDataTransferService","ClientDiagnoseDataService","categorizationService","LocalStorageService"]}();
//# sourceMappingURL=ClientDataService.js.map
/* Min file (c) */
!function(){function a(){var a={restrict:"E",templateUrl:"AppCode/ClientModule/SearchClientTemplate.html",controller:c};return a}function b(a){var b={restrict:"A",link:function(b,c,d){$(c).listview(),b.$watchCollection("model.clientDataServiceValues.filteredData",function(a,b){$(c).listview("refresh").trigger("updatelayout")}),c.on("filterablebeforefilter",function(c,d){a.filter(),b.$apply()})}};return b}function c(a,b){var c=a.model={};c.searchText="",c.clientDataServiceValues=b.getValues(),a.onFetchAllClientData=function(){b.filter("*")},a.onClearClientData=function(){b.filter("")}}angular.module("client-module").directive("searchClient",a).directive("searchAutocomplete",b).controller("SearchClientController",c),b.$inject=["ClientDataService"],c.$inject=["$scope","ClientDataService"]}();
//# sourceMappingURL=SearchClientDirective.js.map
/* Min file (c) */
"use strict";!function(){function a(){var a={restrict:"E",templateUrl:"AppCode/ClientModule/ClientDetailsTemplate.html",scope:{details:"=",index:"="},link:function(a,b,c){b.enhanceWithin()},controller:b};return a}function b(a,b,c,d){a.onAddDiagnose=function(){b.addDiagnoseAction(a.details.clientId)},a.onDeleteClient=function(a){b.deleteClient(a),b.filter()}}angular.module("client-module").directive("clientDetails",a).controller("ClientDetailsController",b),b.$inject=["$scope","ClientDataService","ClientDiagnoseDataService","$rootScope"]}();
//# sourceMappingURL=ClientDetailsDirective.js.map
/* Min file (c) */
!function(){function a(){var a={restrict:"E",templateUrl:"AppCode/ClientModule/ClientAppointmentsTemplate.html",link:function(a,b,c){}};return a}angular.module("client-module").directive("clientAppointments",a)}();
//# sourceMappingURL=ClientAppointmentsDirective.js.map
/* Min file (c) */
"use strict";!function(){function a(a,b,c){function d(){return l}function e(){a.getValue("ClientDiagnoseDataServiceValues").then(function(a){a&&angular.forEach(a,function(a,b){l[b]=a})})}function f(a){return l[a]}function g(b,c){l[b]=c,a.setValue("ClientDiagnoseDataServiceValues",l)}function h(a,d){var e=l.defer=c.defer(),f={lastDiagnose:d,actionTrackerInfo:{clientId:a}};return b.$emit("ClientDiagnoseDataService.addDiagnoseAction",f),DiagnoseTabFunctionality.makeActive(),e.promise}function i(a,d,e){var f=l.defer=c.defer(),g={selectedControlsDetails:e.selectedControlsDetails,imageCollectionHolder:e.imageCollectionHolder,lastDiagnoseWithStatus:e.lastDiagnoseWithStatus,actionTrackerInfo:{clientId:a,diagnoseIndex:d}};return b.$emit("ClientDiagnoseDataService.editDiagnoseAction",g),DiagnoseTabFunctionality.makeActive(),f.promise}function j(a,d,e,f){var g=l.defer=c.defer(),h={selectedControlsDetails:e,imageCollectionHolder:f,actionTrackerInfo:{clientId:a,diagnoseIndex:d}};return b.$emit("client-module.classify-module.classifyDiagnoseAction",h),ClassifyTabFunctionality.makeActive(),g.promise}var k={},l={};return k.getValues=d,k.initialize=e,k.getClientDiagnose=f,k.setClientDiagnose=g,b.$on("DiagnoseDataService.saveClientDiagnose",function(a,b){l.defer.resolve(b),l.defer=null}),b.$on("classify-module.client-module.saveClientDiagnose",function(a,b){l.defer.resolve(b),l.defer=null}),k.addDiagnoseAction=h,k.editDiagnoseAction=i,k.classifyDiagnoseAction=j,k}angular.module("client-module").service("ClientDiagnoseDataService",a),a.$inject=["DBService","$rootScope","$q"]}();
//# sourceMappingURL=ClientDiagnoseDataService.js.map
/* Min file (c) */
!function(){function a(){var a={restrict:"E",templateUrl:"AppCode/ClientModule/PersonalDetailsTemplate.html",controller:b,controllerAs:"personalDetailsControllerInstance"};return a}function b(){function a(){console.log("here")}var b=this;b.onEditClientPersonalDetails=a}angular.module("client-module").directive("personalDetails",a).controller("personalDetailsController",b)}();
//# sourceMappingURL=PersonalDetailsDirective.js.map
/* Min file (c) */
"use strict";!function(){function a(a){var c={restrict:"E",templateUrl:"AppCode/ClientModule/DiagnoseDetailsTemplate.html",scope:{diagnoseData:"=",clientId:"="},link:function(a,b,c){},controller:b};return c}function b(a,b,c){a.onEditDiagnose=function(c){b.editDiagnoseAction(a.clientId,c)},a.onClassifyDiagnose=function(c){b.classifyDiagnoseAction(a.clientId,c)},a.onDeleteDiagnose=function(c){b.deleteDiagnose(a.clientId,c)}}angular.module("client-module").directive("diagnoseDetails",a).controller("DiagnoseDetailsController",b),a.$inject=["$timeout"],b.$inject=["$scope","ClientDataService","ClientDiagnoseDataService"]}();
//# sourceMappingURL=DiagnoseDetailsDirective.js.map
/* Min file (c) */
"use strict";!function(){angular.module("diagnose-module",["diagnose-module.data-transfer","selected-controls-module","last-diagnose-module","categorization-module","data"])}();
//# sourceMappingURL=diagnose.module.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d,e,f){var g=this,h=g.model={};g.initialize=function(){b.initialize(),h.serviceValues=b.getValues(),h.diagnoseDataServiceValues=a.getValues()},g.initialize(),e.$on("ClientDiagnoseDataService.editDiagnoseAction",function(b,d){var e=d;c.setIsControlsValuesBeingSet(!0),a.setIsAddDiagnose(!1),a.setDiagnoseValues(e);var g=0,h=!1,i=f.$watch(function(){h||(h=!0,f.$$postDigest(function(){h=!1,g++<1?setTimeout(function(){FunctionalityModule.enhancePage()},1):(i(),c.setIsControlsValuesBeingSet(!1))}))})}),e.$on("ClientDiagnoseDataService.addDiagnoseAction",function(c,d){a.setIsAddDiagnose(!0),a.setActionTrackerInfo(d.actionTrackerInfo);var e=b.getControls();angular.forEach(e[0].children,function(a,b){return"useAsLastDiagnoseTab"===a.diagnoseTabChoice?(a.lastDiagnose=angular.copy(d.lastDiagnose),!1):void 0})}),g.onSaveDiagnoseItemsData=function(){var b=d.getSelectedControls();try{a.processSelectedControls(b),ClientTabFunctionality.makeActive(),DiagnoseTabFunctionality.makeInactive()}catch(c){console.log("exception: ",c)}}}angular.module("diagnose-module").controller("DiagnoseController",a),a.$inject=["DiagnoseDataService","DiagnoseDataTransferService","SharedDataService","SelectedControlsService","$rootScope","$scope"]}();
//# sourceMappingURL=DiagnoseController.js.map
/* Min file (c) */
"use strict";!function(){function a(a,b,c,d,e,f){function g(){v=a.getValues()}function h(){return x}function i(a){x.isAddDiagnose=a}function j(a){x.actionTrackerInfo=a}function k(){0==x.isAddDiagnose&&(x.isAddDiagnose=!0)}function l(b){e.constructFinalCategorizationArraysWhenTrue(b);var c=a.getControls(),g=f.findMandatoryTabsWithoutAnyControlValueSet(c);if(g.length>0){var h=_.pluck(g,"label");throw x.showAllFieldsMandatoryMessage=!0,x.allFieldsMandatoryMessage="Need to Fill Items at "+h.join(", ")+" to be able to save it",x.allFieldsMandatoryMessage}x.showAllFieldsMandatoryMessage=!1,x.allFieldsMandatoryMessage="";var i;c&&(i=w.constructImageCollectionHolder(c));var j;angular.forEach(c[0].children,function(a,b){return"useAsLastDiagnoseTab"===a.diagnoseTabChoice?(j=a.lastDiagnose,!1):void 0}),d.$emit("DiagnoseDataService.saveClientDiagnose",{selectedControlsDetails:angular.copy(b),imageCollectionHolder:i,lastDiagnoseWithStatus:j,isAddDiagnose:x.isAddDiagnose,actionTrackerInfo:x.actionTrackerInfo}),x.actionTrackerInfo=null,k(),w.resetControls(b),w.resetCategories(b)}function m(a){var b=[];return angular.forEach(a[0].children,function(a,c){"useAsWebCamTab"===a.diagnoseTabChoice&&a.imageValues.imagesCollection&&b.push(angular.copy(a.imageValues.imagesCollection))}),b}function n(a){w.setControlsValues(a.selectedControlsDetails),w.setActionTrackerInfo(a.actionTrackerInfo),w.setLastDiagnoseValues(a.lastDiagnoseWithStatus)}function o(a){var b=v.controls;angular.forEach(b[0].children,function(b,c){return"useAsLastDiagnoseTab"===b.diagnoseTabChoice?(b.lastDiagnose={selectedControlsDetails:a.selectedControlsDetails},!1):void 0})}function p(b){var d=a.getControls();angular.forEach(b,function(a,b){var c=q(d,b);c&&(c.value=a.value,angular.forEach(a.categoriesIdsArray,function(a,b){var d=r(c.categorieschildren,a);d.properties.value=!0}))}),c.setSelectedControls(b)}function q(a,b){for(var c=0;c<a.length;c++){var d=a[c];if(d.properties.id===b)return d;if(d.children){var e=q(d.children,b);if(e)return e}}}function r(a,b){for(var c=0;c<a.length;c++){var d=a[c];if(d.properties.id===b)return d;if(d.categorieschildren){var e=r(d.categorieschildren,b);if(e)return e}}}function s(a){angular.forEach(a,function(a,b){a.value=!1,a.control&&angular.isDefined(a.control.value)&&(a.control.value=!1)})}function t(a){angular.forEach(a,function(a,b){var c=a.categoriesInfo;angular.forEach(c,function(a,b){u(a)})})}function u(a){a&&a.properties.value===!0&&(a.properties.value=!1,void 0!==a.categorieschildren&&angular.forEach(a.categorieschildren,function(a,b){u(a)}))}var v,w={},x={isAddDiagnose:!0,actionTrackerInfo:null,showAllFieldsMandatoryMessage:!1,allFieldsMandatoryMessage:""};return g(),w.getValues=h,w.setIsAddDiagnose=i,w.setActionTrackerInfo=j,w.processSelectedControls=l,w.constructImageCollectionHolder=m,w.setDiagnoseValues=n,w.setLastDiagnoseValues=o,w.setControlsValues=p,w.fetchCategory=r,w.resetControls=s,w.resetCategories=t,w}angular.module("diagnose-module").service("DiagnoseDataService",a),a.$inject=["DiagnoseDataTransferService","SharedDataService","SelectedControlsService","$rootScope","categorizationService","mandatoryTabService"]}();
//# sourceMappingURL=DiagnoseDataService.js.map
/* Min file (c) */
"use strict";!function(){function a(){function a(a){var c=[];return angular.forEach(a[0].children,function(a,d){if(a.properties.useAsMandatoryInput){var e=b(a.children);e||c.push({tabId:a.properties.id,label:a.properties.label})}}),c}function b(a){for(var c=!1,d=0;d<a.length;d++){var e=a[d];if(e.value&&-1===g.indexOf(e.type))return c=!0;if(e.children)return b(e.children)}return c}function c(a,b){angular.forEach(a[0].children,function(a,c){if(a.properties.useAsMandatoryInput){var e=[];d(a.children,e),e.length&&b.push({tabId:a.properties.id,label:a.properties.label,controlsWithoutValueArray:e})}})}function d(a,b){angular.forEach(a,function(a,c){a.value||-1!==f.indexOf(a.type)||b.push(a),a.children&&d(a.children,b)})}var e=this,f=["TabRoot","Tabs","RadioButton","Checkbox","Text","Grid","Block","Collapsible","CollapsibleSet","CategoriesButtons","CategoriesButtonsStems","CategoriesRoot","Div","Design","Content","Page","WebCamTab","LastDiagnoseTab",void 0],g=["TabRoot","Tabs","CheckboxGroup","RadioButton","Text","Grid","Block","Collapsible","CollapsibleSet","CategoriesButtons","CategoriesButtonsStems","CategoriesRoot","Div","Design","Content","Page","WebCamTab","LastDiagnoseTab",void 0];e.findMandatoryTabsWithoutAnyControlValueSet=a,e.checkEachTabForControlsWithoutValue=c}angular.module("diagnose-module").service("mandatoryTabService",a)}();
//# sourceMappingURL=diagnose.mandatory-tab.service.js.map
/* Min file (c) */
"use strict";!function(){function a(a,b){function c(){b.getValue("DiagnoseDataTransferServiceValues").then(function(a){a&&(j.controls=a.controls,setTimeout(function(){$("#diagnoseTabArea").enhanceWithin()},400))})}function d(){return j.controls}function e(a){j.controls=a,g()}function f(a){j.lastDiagnose=a,i.persistData()}function g(){b.setValue("DiagnoseDataTransferServiceValues",j)}function h(){return j}var i=this,j={controls:null};i.initialize=c,i.getControls=d,i.setControls=e,i.setLastDiagnose=f,i.persistData=g,i.getValues=h}angular.module("diagnose-module.data-transfer",["db-module"]).service("DiagnoseDataTransferService",a),a.$inject=["LocalStorageService","DBService"]}();
//# sourceMappingURL=DiagnoseDataTransferService.js.map
/* Min file (c) */
!function(){angular.module("last-diagnose-module",[])}();
//# sourceMappingURL=last-diagnose.last-diagnose-tab.module.js.map
/* Min file (c) */
!function(){function a(){var a={restrict:"E",templateUrl:"AppCode/DiagnoseModule/LastDiagnoseTab/last-diagnose.last-diagnose-tab.template.html",scope:{controls:"="}};return a}angular.module("last-diagnose-module").directive("lastDiagnoseTab",a)}();
//# sourceMappingURL=last-diagnose.last-diagnose-tab.directive.js.map
/* Min file (c) */
"use strict";!function(){angular.module("classify-module",[])}();
//# sourceMappingURL=ClassifyModule.js.map
/* Min file (c) */
"use strict";!function(){function a(a){var b={restrict:"AE",templateUrl:"AppCode/ClassifyModule/ClassifyDiagnoseTemplate.html",controller:"ClassifyDiagnoseController",controllerAs:"classifyDiagnoseController",link:function(b,c,d){a(function(){},1)}};return b}function b(a){var b=this,c=b.model={selectedControlsDetails:{},actionTrackerInfo:{}};a.$on("client-module.classify-module.classifyDiagnoseAction",function(a,b){c.selectedControlsDetails=b.selectedControlsDetails,c.actionTrackerInfo=b.actionTrackerInfo}),b.onSaveClassificationInfo=function(){var b={selectedControlsDetails:angular.copy(c.selectedControlsDetails),actionTrackerInfo:c.actionTrackerInfo};a.$emit("classify-module.client-module.saveClientDiagnose",b),ClientTabFunctionality.makeActive(),ClassifyTabFunctionality.makeInactive()}}angular.module("classify-module").controller("ClassifyDiagnoseController",b).directive("classifyDiagnose",a),a.$inject=["$timeout"],b.$inject=["$rootScope"]}();
//# sourceMappingURL=ClassifyDiagnoseDirective.js.map
/* Min file (c) */
!function(){function a(){function a(b,c,d){if(d||(d=[]),""!==b.properties.label&&d.push(b.properties.label),d.length>0){var e=d.join(" : ");c.push(e)}b.categorieschildren&&angular.forEach(b.categorieschildren,function(b){a(b,c,d)})}function b(a,b){angular.forEach(a.categorieschildren,function(a){e.constructCategorizationTree(a,b,void 0)})}function c(a){angular.forEach(a,function(a,b){a.finalCategorizationArrays=[],a.categoriesIdsArray=[];var c=a.categoriesInfo;angular.forEach(c,function(b,c){if(b.properties.value===!0){var e=[];d(b,e,a)}})})}function d(a,b,c){if(a&&a.properties.value){if(c.categoriesIdsArray.push(a.properties.id),b.push(a),void 0===a.categorieschildren)return c.finalCategorizationArrays.push(angular.copy(b)),void b.splice(b.length-1,1);var e=!1;if(angular.forEach(a.categorieschildren,function(a,b){a.properties.value&&(e=!0)}),!e)return c.finalCategorizationArrays.push(angular.copy(b)),void b.splice(b.length-1,1);angular.forEach(a.categorieschildren,function(a,e){d(a,b,c)})}}var e=this;e.constructCategorizationTree=a,e.constructFinalCategorizationArrays=b,e.constructFinalCategorizationArraysWhenTrue=c}angular.module("categorization-module",[]).service("categorizationService",a)}();
//# sourceMappingURL=categorization.categorization.service.js.map
/* Min file (c) */
"use strict";!function(){angular.module("config-module.diagnose-config",["diagnose-module.data-transfer","controls-module","db-module","categorization-module","jqm-components-module"])}();
//# sourceMappingURL=config-module.diagnose-config.module.js.map
/* Min file (c) */
"use strict";!function(){function a(){return function(a,b,c){return _.filter(a,function(a){return a[b]===c})}}function b(a){function b(){e.serviceValues=a.getValues(),e.controlsServiceValues=a.initialize()}function c(b,c){function d(d){var e=b.files[0].name,f=d.target.result;a.loadFileAsControls(e,f,c)}var e="",f="";a.loadFileAsControls(e,f,c);var g=new FileReader;g.addEventListener("load",d),g.readAsText(b.files[0])}var d=this,e=d.model={};d.initialize=b,b(),d.onFileInput=c,d.onAddDiagnoseTab=function(){a.addDiagnoseTab(),setTimeout(function(){},1)},d.onSaveDiagnoseConfig=function(){a.saveDiagnoseConfig()},d.onChangeCategories=function(b,c){a.categoryChanged(b,c)},d.onChangeInputPanel=function(b,c){a.changeInputPanel(b,c)},d.onChangeDiagnoseList=function(b){a.changeDiagnoseList(b)},d.onDeleteDiagnoseTab=function(b){a.deleteDiagnoseTab(b)}}angular.module("config-module.diagnose-config").filter("property",a).controller("DiagnoseConfigController",b),b.$inject=["DiagnoseConfigDataService"]}();
//# sourceMappingURL=DiagnoseConfigController.js.map
/* Min file (c) */
"use strict";!function(){function a(a,b,c,d,e,f){function g(){var d=c.getServiceValues();return a.getValue("DiagnoseConfigDataServiceValues").then(function(a){a&&a.tabInfo&&(b.scanAndUpdateDuplicateIds(a.tabInfo),s.tabInfo=a.tabInfo,s.tabInfo.length>0&&angular.forEach(s.tabInfo[0].children,function(a,b){a.selectedList&&angular.forEach(d.lists,function(b,c){return b.listName===a.selectedList.listName?(a.selectedList=d.lists[c],!1):void 0}),a.leftPanelCategoriesList&&angular.forEach(d.lists,function(b,c){return b.listName===a.leftPanelCategoriesList.listName?(a.leftPanelCategoriesList=d.lists[c],!1):void 0}),a.rightPanelCategoriesList&&angular.forEach(d.lists,function(b,c){return b.listName===a.rightPanelCategoriesList.listName?(a.rightPanelCategoriesList=d.lists[c],!1):void 0})}))}),d}function h(){$("#diagnoseConfigLoader").loader().loader("show"),a.setValue("DiagnoseConfigDataServiceValues",s).then(function(a){$("#diagnoseConfigLoader").loader("hide")})}function i(){return s}function j(a,c,d){if(s.tabInfo[0].children[d]){s.tabInfo[0].children[d].fileName=a,s.tabInfo[0].children[d].children&&b.removeIdsFromCacheList(s.tabInfo[0].children[d].children);try{var e=JSON.parse(c);b.scanAndUpdateDuplicateIds(e),s.tabInfo[0].children[d].children=e}catch(f){}}}function k(){var a={properties:{label:"Diagnose Tab "+(s.tabInfo[0].children.length+1),id:b.generateUniqueId()},type:"Tabs"};s.tabInfo[0].children.push(a)}function l(){r.persistValues();var a=b.scanAndUpdateDuplicateIds(angular.copy(s.tabInfo));d.setControls(a),angular.forEach(a[0].children,function(a,b){e.setTabOptions(a.properties.id,a)}),ConfigTabFunctionality.setAppRefreshPending()}function m(a){s.tabInfo[0].children[a].children=s.tabInfo[0].children[a].selectedList.controls}function n(a,b){r.updateCategorizationArray(a,b)}function o(a,b){return r.updateCategorizationArray(a,b)}function p(a,b){var c="specificCategory"===b?s.tabInfo[0].children[a].properties.specificCategoriesList:null;if(null===c)return null;var d=c.controls;s.tabInfo[0].children[a].categories=d;var e=s.tabInfo[0].children[a].categories,g=[];f.constructFinalCategorizationArrays(e[0],g),s.tabInfo[0].children[a].categoriesListArray=g}function q(a){b.removeIdsFromCacheList(s.tabInfo[0].children[a]),b.removeIdsFromCacheList(s.tabInfo[0].children[a].categories,"categorieschildren"),s.tabInfo[0].children.splice(a,1);var c=d.getControls();c[0].children.splice(a,1),d.setControls(c)}var r={},s={tabInfo:[{properties:{id:"rootId"},type:"TabRoot",children:[]}]};return r.initialize=g,r.persistValues=h,r.getValues=i,r.loadFileAsControls=j,r.addDiagnoseTab=k,r.saveDiagnoseConfig=l,r.changeDiagnoseList=m,r.changeInputPanel=n,r.categoryChanged=o,r.updateCategorizationArray=p,r.deleteDiagnoseTab=q,r}angular.module("config-module.diagnose-config").service("DiagnoseConfigDataService",a),a.$inject=["DBService","IdentityService","ControlsService","DiagnoseDataTransferService","TabOptionsDataService","categorizationService"]}();
//# sourceMappingURL=DiagnoseConfigDataService.js.map
/* Min file (c) */
!function(){function a(a){return{restrict:"E",templateUrl:"AppCode/DiagnoseConfig/DiagnoseConfigTemplate.html",link:function(a,b,c){}}}angular.module("config-module.diagnose-config").directive("diagnoseConfig",a),a.$inject=["$timeout"]}();
//# sourceMappingURL=DiagnoseConfigDirective.js.map
/* Min file (c) */
!function(){function a(){var a={restrict:"AE",templateUrl:"AppCode/DiagnoseConfig/TabOptionsTemplate.html",replace:!0};return a}angular.module("config-module.diagnose-config").directive("tabOptions",a)}();
//# sourceMappingURL=TabOptionsDirective.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b){b.initClassificationData().then(function(b){a.sharedData=b,FunctionalityModule.enhancePage()}),a.addClassification=function(){void 0!==a.inputClassificationName&&""!==a.inputClassificationName&&(b.addClassification(a.inputClassificationName).then(function(){a.inputClassificationName="",FunctionalityModule.enhancePage(),$(".js-classify-diagnose-button").removeClass("ui-disabled")}),ConfigTabFunctionality.setAppRefreshPending(!0))},a.addSubClassification=function(c,d){var e=a.sharedData.classificationData[d].subCategoryInput;void 0!==e&&""!==e&&(b.addSubClassification(d,c,e).then(function(){}),ConfigTabFunctionality.setAppRefreshPending(!0))},a.deleteClassification=function(a,c){b.deleteSubCategoriesWithParent(a).then(function(){b.deleteCategory(a,c)}),ConfigTabFunctionality.setAppRefreshPending(!0)},a.deleteSubCategory=function(a,c){b.deleteSubCategory(a,c).then(function(){ConfigTabFunctionality.setAppRefreshPending(!0)})}}angular.module("myapp").controller("ConfigureClassificationController",a),a.$inject=["$scope","ClassificationDataService"]}();
//# sourceMappingURL=aConfigureClassificationController.js.map
(function () {
  'use strict';
  angular.module('myapp.classification', []);
})();

/* Min file (c) */
!function(){function a(a){ClassifyTabFunctionality.setClassificationUtilitiesService(a)}angular.module("myapp.classification").run(a),a.$inject=["ClassificationUtilitiesService"]}();
//# sourceMappingURL=initExternalReferences.js.map
/* Min file (c) */
function ClassificationDataService(a,b){function c(){var c=a.defer(),d={};return d.tableReference="classification",d.queryReference="selectData",d.queryParametersArray=[[]],d.callback=function(a){if(void 0!==a){var d={};angular.forEach(a,function(a,b){if(null===a.parentClassificationId){if(void 0==d[a.classificationId]){var c={data:{classificationInsertId:a.classificationId,id:a.classificationId,name:a.classificationName,value:!1},subCategoryInput:"",categorieschildren:[]};d[a.classificationId]=c}}else void 0!==d[a.parentClassificationId]&&d[a.parentClassificationId].categorieschildren.push({data:{classificationInsertId:a.classificationId,id:""+a.parentClassificationId+a.classificationId,name:a.classificationName,value:!1},subCategoryInput:""})}),angular.forEach(d,function(a,c){b.sharedData.classificationData.push(a)}),c.resolve(b.sharedData)}},DataModule.executeAll(d),c.promise}function d(c){var d={};return d.deferred=a.defer(),d.tableQueryReference=["classification","insertData","query"],d.queryParametersArray=[c,null],DataModule.executeQuery(d).promise.then(function(a){console.log(a),b.sharedData.classificationData.push({data:{id:a,classificationInsertId:a,name:c,value:!1},name:"",categorieschildren:[]})}),d.deferred.promise}function e(c,d,e){var f={};return f.deferred=a.defer(),f.tableReference="classification",f.queryReference="insertData",f.queryParametersArray=[[e,d]],f.callback=function(a){var d=a.insertId;b.sharedData.classificationData[c].categorieschildren.push({data:{name:e,id:d,value:!1}}),b.sharedData.classificationData[c].subCategoryInput=""},DataModule.executeAll(f),f.deferred.promise}function f(b){var c={};return c.deferred=a.defer(),c.tableReference="classification",c.queryReference="deleteDataWhereParent",c.queryParametersArray=[[b]],c.queryType="delete",DataModule.executeAll(c),c.deferred.promise}function g(c,d){var e={};return e.deferred=a.defer(),e.tableReference="classification",e.queryReference="deleteData",e.queryParametersArray=[[c]],e.queryType="delete",e.callback=function(){b.sharedData.classificationData.splice(d,1)},DataModule.executeAll(e),e.deferred.promise}function h(c,d){var e=_.findIndex(b.sharedData.classificationData,function(a){return a.data.classificationInsertId===d}),f=_.findIndex(b.sharedData.classificationData[e].categorieschildren,function(a){return a.data.classificationInsertId===c}),g={};return g.deferred=a.defer(),g.tableReference="classification",g.queryReference="deleteData",g.queryParametersArray=[[c]],g.queryType="delete",g.callback=function(){b.sharedData.classificationData[e].categorieschildren.splice(f,1)},DataModule.executeAll(g),g.deferred.promise}var i={};return i.initClassificationData=c,i.addClassification=d,i.addSubClassification=e,i.deleteSubCategoriesWithParent=f,i.deleteCategory=g,i.deleteSubCategory=h,i}angular.module("myapp.classification").service("ClassificationDataService",ClassificationDataService),ClassificationDataService.$inject=["$q","Data"];
//# sourceMappingURL=ClassificationDataService.js.map
/* Min file (c) */
!function(){function a(a){function b(a,c){$.each(c,function(c,d){d.data.value&&(a.push(d.data.name),void 0!==d.categorieschildren&&b(d.categorieschildren,a))})}function c(a,b){$.each(a,function(a,c){var e=!1;$.each(b,function(a,b){b.data.classificationInsertId===c&&(b.data.value=!0,e=!0)}),e===!1&&$.each(b,function(a,b){d(c,b.categorieschildren)})})}function d(a,b){var c=!1;return $.each(b,function(b,e){return e.data.classificationInsertId===a?(e.data.value=!0,c=!0,!1):void 0!==e.categorieschildren&&d(a,e.categorieschildren)?(c=!0,!1):void 0}),c}function e(a,b,c,d){$.each(b,function(b,f){f.properties.value&&(d.push(f.properties.name),c.push([a,f.properties.classificationInsertId]),void 0!==f.categorieschildren&&e(a,f.categorieschildren,c,d))})}var f={};return f.constructCategorizationTree=b,f.setClassificationValues=c,f.setSubClassificationValues=d,f.constructDiagnoseClassificationCollection=e,f}angular.module("myapp").service("ClassificationUtilitiesService",a),a.$inject=["$q"]}();
//# sourceMappingURL=ClassificationUtilitiesService.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c){a.data={},a.sharedData=b.sharedData,a.saveClassificationInfo=function(){var b=_.pluck(a.data.diagnoseItems,"diagnoseItemId"),d=_.map(a.data.diagnoseItems,function(a){return{diagnoseDetail:a}});c.deleteDiagnoseClassificationInfo(b).then(function(c){ClientTabFunctionality.insertCategorizationInfo(d,b,a.data.clientId,a.data.diagnoseId,a.data.diagnoseName,!1),ClientTabFunctionality.makeActive(),ClassifyTabFunctionality.makeInactive()})}}angular.module("myapp.classification").controller("ClassificationListController",a),a.$inject=["$scope","Data","DiagnoseClassificationDataService"]}();
//# sourceMappingURL=ClassificationListController.js.map
/* Min file (c) */
!function(){"use strict";angular.module("panels-module",["data"])}();
//# sourceMappingURL=panels.module.js.map
/* Min file (c) */
!function(){"use strict";function a(a){return{restrict:"E",templateUrl:"Components/Panels/right-panel.template.html",scope:{type:"@"},link:function(b){b.panelsData=a.getAllPanelsData()}}}angular.module("panels-module").directive("rightPanel",a),a.$inject=["panelDataService"]}();
//# sourceMappingURL=right-panel.directive.js.map
/* Min file (c) */
"use strict";!function(){function a(){function a(){return f}function b(a,b){f.panels[a]=b}function c(a){return f.panels[a]}function d(){return f.panels}var e=this,f={panels:{}};e.getValues=a,e.setPanelData=b,e.getPanelData=c,e.getAllPanelsData=d}angular.module("panels-module").service("panelDataService",a)}();
//# sourceMappingURL=panel-data.service.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c){a.sharedData=b.sharedData}angular.module("panels-module").controller("PanelController",a),a.$inject=["$scope","Data","$compile"]}();
//# sourceMappingURL=PanelController.js.map
(function() {
  angular.module('controlsTree', ['ui.tree', 'ui' , 'db-module', 'controls-module',
  									'import-export-module', 'list-section-module'
                                  // , 'firebase'
                                  ], function($rootScopeProvider) {
                                        $rootScopeProvider.digestTtl(15);
                                      });
})();

/* Min file (c) */
!function(){function a(a){var b=this,c=b.model={};c.notifications=a.getMessageArea()}angular.module("notifications-module",[]).controller("NotificationsController",a),a.$inject=["NotificationsService"]}();
//# sourceMappingURL=NotificationsController.js.map
/* Min file (c) */
!function(){function a(){function a(a,b){c(),e.push(d[a]+(b?b:""))}function b(){return e}function c(){e.splice(0,e.length)}var d=["Please select a container item to add the new item.","Please enter item label.","Please enter list name.","Please select section type.","Selected: ","List name already exists"],e=[],f={SELECT_CONTAINER_MSG:0,ENTER_ITEM_LABEL_MSG:1,ENTER_LIST_NAME_MSG:2,SELECT_SECTION_MSG:3,SELECTED_MSG:4,LIST_EXISTS_MSG:5};return f.setMessage=a,f.getMessageArea=b,f.resetMessage=c,f}angular.module("notifications-module").service("NotificationsService",a)}();
//# sourceMappingURL=NotificationsService.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d,e){b.all(e.getDeferedArray()).then(function(){a.serviceValues=d.getServiceValues(),c(function(){},1)}),a.updatePreview=function(){$("[data-url]").remove(),window.location.reload()}}angular.module("controlsTree").controller("PreviewControlsController",a),a.$inject=["$scope","$q","$timeout","ControlsService","DirectiveCreateService"]}();
//# sourceMappingURL=PreviewControlsController.js.map
/* Min file (c) */
!function(){function a(a){this.list=a.getServiceValues()}angular.module("controlsTree").controller("ShowJSONTreeController",a),a.$inject=["ControlsService"]}();
//# sourceMappingURL=ShowJSONTreeController.js.map
(function () {
  angular.module('controls-module', ['selected-controls-module', 'panels-module', 'db-module']);
}());

/* Min file (c) */
!function(){function a(){var a={},b={TEXT:0,BOOLEAN:1,SELECT:2};a.types=b;var c={},d=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:"value",fieldType:b.TEXT},{fieldName:"Is Checked",fieldPath:"properties.isChecked",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN,fieldOptions:[{display:"Disabled",value:!0},{display:"Enabled",value:!1}]}],e=[{fieldName:"Legend",fieldPath:"properties.legend",fieldValue:"",fieldType:b.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Orientation",fieldPath:"properties.orientation",fieldValue:"vertical",fieldType:b.SELECT,fieldOptions:[{display:"horizontal",value:"horizontal"},{display:"vertical",value:"vertical"}]}],f=[{fieldName:"Text",fieldPath:"properties.text",fieldValue:"",fieldType:b.TEXT}],g=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:0,fieldType:b.TEXT},{fieldName:"Min",fieldPath:"properties.min",fieldValue:0,fieldType:b.TEXT},{fieldName:"Max",fieldPath:"properties.max",fieldValue:100,fieldType:b.TEXT},{fieldName:"Step",fieldPath:"properties.step",fieldValue:1,fieldType:b.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Highlight",fieldPath:"properties.highlight",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN}],h=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Value 1",fieldPath:"properties.value1",fieldValue:"no",fieldType:b.TEXT},{fieldName:"Value 2",fieldPath:"properties.value",fieldValue:"yes",fieldType:b.TEXT},{fieldName:"Label 1",fieldPath:"properties.label1",fieldValue:"No",fieldType:b.TEXT},{fieldName:"Label 2",fieldPath:"properties.label2",fieldValue:"Yes",fieldType:b.TEXT},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN}],i=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Value",fieldPath:"properties.value",fieldValue:"",fieldType:b.TEXT},{fieldName:"Type",fieldPath:"properties.type",fieldValue:"text",fieldType:b.SELECT,fieldOptions:[{display:"Text",value:"text"},{display:"Number",value:"number"},{display:"Date",value:"date"},{display:"Month",value:"month"},{display:"Week",value:"week"},{display:"Time",value:"time"},{display:"Date Time",value:"datetime-local"}]},{fieldName:"Hint",fieldPath:"properties.hint",fieldValue:"",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"",fieldType:b.TEXT},{fieldName:"Native Control",fieldPath:"properties.nativecontrol",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN}],j=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT}],k=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT}],l=[{fieldName:"Id",fieldPath:"properties.id",fieldValue:"id1",fieldType:b.TEXT},{fieldName:"Heading",fieldPath:"properties.heading",fieldValue:"Collapsible Area",fieldType:b.TEXT},{fieldName:"Collapsed",fieldPath:"properties.collapsed",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Icon Position",fieldPath:"properties.iconpos",fieldValue:"left",fieldType:b.SELECT,fieldOptions:[{display:"left",value:"left"},{display:"top",value:"top"},{display:"right",value:"right"},{display:"bottom",value:"bottom"},{display:"right",value:"right"}]},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Disabled",fieldPath:"properties.disabled",fieldValue:!1,fieldType:b.BOOLEAN,fieldOptions:[{display:"Disabled",value:!0},{display:"Enabled",value:!1}]}],m=[{fieldName:"Corners",fieldPath:"properties.corners",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!0,fieldType:b.BOOLEAN},{fieldName:"Enable Filter",fieldPath:"properties.filter",fieldValue:!1,fieldType:b.BOOLEAN}],n=[{fieldName:"Mini",fieldPath:"properties.mini",fieldValue:!1,fieldType:b.BOOLEAN},{fieldName:"Label",fieldPath:"properties.label",fieldValue:"Label",fieldType:b.TEXT}],o=[{fieldName:"Label",fieldPath:"properties.label",fieldValue:"",fieldType:b.TEXT}];return a.generate=function(a,b){var p=null;switch(a){case"Checkbox":case"RadioButton":p=angular.copy(d);break;case"CheckboxGroup":case"RadioGroup":p=angular.copy(e);break;case"Text":p=angular.copy(f);break;case"Slider":p=angular.copy(g);break;case"ToggleSwitch":p=angular.copy(h);break;case"TextInput":p=angular.copy(i);break;case"Filterable":p=angular.copy(k);break;case"Collapsible":p=angular.copy(l);break;case"CollapsibleSet":p=angular.copy(m);break;case"Tabs":p=angular.copy(j);break;case"SelectMenu":p=angular.copy(n);break;case"Option":p=angular.copy(o);break;default:return null}return _.deepMapValues({properties:b},function(b,c){if("properties"===c[0]){var d=c.join("."),e=_.pluck(p,"fieldPath").indexOf(d);-1!==e?p[e].fieldValue=b:p.push({fieldName:c[1],fieldPath:d,fieldValue:b,fieldType:a.TEXT})}return b}),angular.forEach(p,function(a,b){_.deepSet(c,a.fieldPath,a.fieldValue)}),p},a.getStructure=function(){return c},a}angular.module("controls-module").service("FieldsGeneratorService",a),a.$inject=[]}();
//# sourceMappingURL=FieldsGeneratorService.js.map
/* Min file (c) */
!function(){function a(a){function b(c,d,f){if(angular.isArray(c))angular.forEach(c,function(a,c){b(a,d,!0)});else{if(d=d?d:"children",angular.isDefined(c.properties)&&(angular.isUndefined(c.properties.isIdUpdated)||c.properties.isIdUpdated===!1)&&(c.properties.id="newItem"+e(),c.properties.isIdUpdated=!0,c.fieldsInfo)){var h=_.filter(c.fieldsInfo,function(a){return"properties.id"===a.fieldPath});h.length>0&&(h[0].fieldValue=c.properties.id)}angular.forEach(c[d],function(a,c){b(a,d,!0)})}return angular.isUndefined(f)&&a.setValue("IdentityServiceValues",g),c}function c(a,b){if(angular.isArray(a))angular.forEach(a,function(a,d){c(a,b)});else{if(b=b?b:"children",angular.isDefined(a.properties))if(a.properties.id&&-1!==h.indexOf(a.properties.id)){if(a.properties.id="newItem"+e(),a.fieldsInfo){var d=_.filter(a.fieldsInfo,function(a){return"properties.id"===a.fieldPath});d.length>0&&(d[0].fieldValue=a.properties.id)}h.push(a.properties.id)}else a.properties.id&&-1===h.indexOf(a.properties.id)&&h.push(a.properties.id);angular.forEach(a[b],function(a,d){c(a,b)})}return a}function d(a,b){if(angular.isArray(a))angular.forEach(a,function(a,c){d(a,b)});else{if(b=b?b:"children",angular.isDefined(a)&&angular.isDefined(a.properties)){var c=h.indexOf(a.properties.id);a.properties.id&&-1!==c&&h.splice(c,1)}angular.isDefined(a)&&angular.forEach(a[b],function(a,c){d(a,b)})}return a}function e(){return++g.currentItemIndex,a.setValue("IdentityServiceValues",g),g.currentItemIndex}var f={},g={currentItemIndex:0};f.updateControlsId=b;var h=[];return f.scanAndUpdateDuplicateIds=c,f.removeIdsFromCacheList=d,f.generateUniqueId=e,f}angular.module("controls-module").service("IdentityService",a),a.$inject=["DBService"]}();
//# sourceMappingURL=IdentityService.js.map
/* Min file (c) */
!function(){function a(a,b,c,d,e){function f(){d.getValue(D).then(function(a){return a&&a.error?void console.log("Error in reading Control service values from DB",a.error):(void 0===a?d.setValue(D,G).then(function(a){return a&&a.error?void console.log("Error in setting Control service values in DB",a.error):void F.resolve()}):(G.lists=a.lists,F.resolve()),$("#listNameInput").focus(),void $("#listItemNameInput").focus())})}function g(a,b,c){if(angular.isUndefined(b)&&(b=B),angular.isUndefined(c)&&(c="diagnose"),"categories"===c&&(b.type="CategoriesButtonsStems"),-1!==_.pluck(G.lists,"listName").indexOf(a))return-1;var d={};d.listName=a,d.controls=[b],d.section=c,G.lists.push(d),k()}function h(a){a=a?a:0,a<G.lists.length&&(G.selected.list=G.lists[a],G.selected.listIndex=a,k("selected"))}function i(a){G.selected.list.listName=a,G.lists[G.selected.listIndex].listName=a,k("selected"),k("lists")}function j(){return G.selected.list}function k(a){var b;void 0===b&&(b=D);var c=["controls","lists","selected","allListNames"];F.promise.then(function(){$.indexedDB(C).objectStore(E).get(b).then(function(d){var e=d;void 0!==a?d[a]=G[a]:angular.forEach(c,function(a,b){d[a]=G[a]}),$.indexedDB(C).objectStore(E).put(e,b).then(function(){$.indexedDB(C).objectStore(E).get(b).then(function(a){},function(a,b){console.log("Could not get back updated data")})},function(a,b){console.log("Could not update data")})},function(a,c){console.log("Could not select by key:",b)})})}function l(){return G.controls}function m(){return G.selected}function n(a){return J[a]}function o(a,b){var c=J[b];angular.isUndefined(a[c])&&(a[c]=[])}function p(a,b){var c={properties:{id:"newItem"+e.generateUniqueId()},type:b},d=J[a];return c[d]=[],c}function q(a,b,d,e){o(a,e);var f=p(e,d);switch(f.fieldsInfo=c.generate(d,f.properties),null!==f.fieldsInfo&&(f=$.extend(!0,{},c.getStructure(),f)),d){case"Checkbox":case"RadioButton":case"Slider":case"TextInput":case"Tabs":case"Option":f.properties.label=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.label"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;case"CheckboxGroup":case"RadioGroup":f.properties.legend=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.legend"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;case"Text":f.properties.text=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.text"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;case"Collapsible":f.properties.heading=b;for(var g=0;g<f.fieldsInfo.length;g++)if("properties.heading"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}break;default:if(f.properties.label=b,null!==f.fieldsInfo&&angular.isDefined(f.fieldsInfo))for(var g=0;g<f.fieldsInfo.length;g++)if("properties.label"===f.fieldsInfo[g].fieldPath){f.fieldsInfo[g].fieldValue=b;break}}var h=J[e];return a[h].push(f),G.selected.item=f,k(),f}function r(a){return-1!==I.indexOf(a)}function s(){return G}function t(a){H=a}function u(){return H}function v(){if(null!==H){var a=J[G.selected.list.section],c=angular.copy(H.$modelValue),d=e.scanAndUpdateDuplicateIds(c,a);H.$parentNodeScope.$modelValue[a].push(d),k(),b(function(){},1)}}function w(a){var b=G.lists[a].listName;G.lists.splice(a,1),G.selected.list&&G.selected.list.listName===b&&(G.selected.list={}),k()}function x(){$.indexedDB("id-app").deleteDatabase()}function y(a,b,c){return b||(b=0),c=c?c:"children",angular.isArray(a)?angular.forEach(a,function(a,d){b=y(a,b+1,c)}):(angular.isDefined(a.properties)&&(K=a),angular.forEach(a[c],function(a,d){b=y(a,b+1,c)})),b}function z(){return K}var A={},B={type:"Content",zone:"content",properties:{id:"dummyId"},children:[],categorieschildren:[]},C="TCMD",D="ControlServiceValues",E="appStore",F=a.defer(),G={controls:[],lists:[],selected:{list:null,listIndex:-1,item:null}},H=null;A.initialize=f,f(),A.createList=g,A.setSelectedList=h,A.setSelecedListName=i,A.getSelectedList=j,A.persistData=k;var I=["Tabs","RadioGroup","CheckboxGroup","Grid","SelectMenu","Collapsible","Block","Content","Div","TabRoot","Collapsible","CollapsibleSet","CategoriesButtons","CategoriesButtonsStems"];A.getControls=l,A.getSelected=m;var J={diagnose:"children",categories:"categorieschildren",personalData:"children"};A.getChildNodeAttr=n,A.addNewSubItem=q,A.isContainer=r,A.getServiceValues=s,A.setSelectedItemScope=t,A.getSelectedItemScope=u,A.duplicateSelectedItem=v,A.removeList=w,A.deleteDB=x;var K=null;return A.findDeepestNode=y,A.getDeepestNode=z,A}angular.module("controls-module").service("ControlsService",a),a.$inject=["$q","$timeout","FieldsGeneratorService","DBService","IdentityService"]}();
//# sourceMappingURL=ControlsService.js.map
/* Min file (c) */
!function(){function a(a,b){function c(){var b=a.getValue("TabOptionsDataServiceValues");b&&angular.extend(h,b)}function d(){return h}function e(a){return h[a]}function f(b,c){h[b]=c,a.setValue("TabOptionsDataServiceValues",h)}var g={},h={};return g.initialize=c,c(),g.getValues=d,g.getTabOptions=e,g.setTabOptions=f,g}angular.module("controls-module").service("TabOptionsDataService",a),a.$inject=["LocalStorageService","DBService"]}();
//# sourceMappingURL=TabOptionsDataService.js.map
/* Min file (c) */
!function(){function a(a,b,c,d,e,f){function g(a,b){a.heirarchyLabels||(a.heirarchyLabels=[]),a.heirarchyLabels=(angular.isDefined(b)&&angular.isDefined(b.heirarchyLabels)?angular.copy(b.heirarchyLabels):[]).concat(a.heirarchyLabels);var c=h(a);c&&a.heirarchyLabels.push(c)}function h(a){return"Collapsible"===a.type&&a.properties.heading?a.properties.heading:"CheckboxGroup"===a.type&&a.name?a.name:void 0}function i(a,b){angular.isUndefined(b)||(a.heirarchyLabels=b.heirarchyLabels?angular.copy(b.heirarchyLabels):[])}function j(a){d.set("RadioGroupCount",d.get("RadioGroupCount")+1),a.controls.groupname="RadioGroup"+d.get("RadioGroupCount"),a.controls.labelPrefix=d.get("tabHierarchyHeadings"),a.controls.name=a.controls.properties.legend,void 0===a.controls.properties.id&&(a.controls.properties.id="RadioGroup"+d.get("RadioGroupCount"));var f=b.getTabOptions(a.controls.properties.tabId);a.$watch("controls.value",function(b,g){if(void 0!==b){var h={controlId:a.controls.properties.id,label:a.controls.labelPrefix+a.controls.properties.legend,heirarchyLabels:a.controls.heirarchyLabels,type:a.controls.type,valueLabel:a.controls.value,value:a.controls.value,labelPrefix:a.controls.labelPrefix,categoriesInfo:a.controls.categorieschildren,control:a.controls};u(h),c.addControl(a.controls.properties.id,h),a.controls.showCategory=!0,t(h,f),f&&f.properties&&e.setSpecifiClassificationDetails(h,f.properties),!d.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&f&&(f.properties.useClassificationPanelInput||f.properties.useRightPanelInput)&&s(f.properties)}else delete d.get("SelectedControls")[a.controls.properties.id],a.controls.showCategory=!1,d.setRecentlySelectedControlDetails(void 0)}),r(a,f)}function k(a){a.controls.name=a.controls.properties.legend,angular.forEach(a.controls.children,function(b,c){b.name=a.controls.name})}function l(a,f,g){var h=d.get("uniqueProperty");a.controls.uniqueProperty=angular.isDefined(h)?h:"",a.controls.properties.id=a.controls.uniqueProperty+a.controls.properties.id,a.controls.labelPrefix=d.get("tabHierarchyHeadings");var i=b.getTabOptions(a.controls.properties.tabId);r(a,i),a.$watch("controls.value",function(b,f){if(b!==!0||f!==!1&&void 0!==f)b===!1&&f===!0&&(c.hasControl(a.controls.properties.id)&&c.removeControl(a.controls.properties.id),a.controls.showCategory=!1,d.setRecentlySelectedControlDetails(void 0));else{var g={controlId:a.controls.properties.id,label:a.controls.name?a.controls.name:"",heirarchyLabels:a.controls.heirarchyLabels,type:a.controls.type,valueLabel:a.controls.properties.label,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren,control:a.controls};u(g),c.addControl(a.controls.properties.id,g),a.controls.showCategory=!0,t(g,i),e.setSpecifiClassificationDetails(g,i.properties),!d.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&i&&(i.properties.useClassificationPanelInput||i.properties.useRightPanelInput)&&s(i.properties)}})}function m(a,f){a.controls.value||(a.controls.value=0);var g=d.get("uniqueProperty");a.controls.uniqueProperty=angular.isDefined(g)?g:"",a.controls.properties.id=a.controls.uniqueProperty+a.controls.properties.id,a.controls.labelPrefix=d.get("tabHierarchyHeadings");var h=b.getTabOptions(a.controls.properties.tabId);f.on("change",'input[type="number"]',function(){var b=parseInt($(this).val());if(!(0>=b)){a.controls.value=b;var f={controlId:a.controls.properties.id,label:a.controls.properties.label,type:a.controls.type,valueLabel:a.controls.value,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren,control:a.controls};u(f),c.addControl(a.controls.properties.id,f),t(f,h),e.setSpecifiClassificationDetails(f,h.properties),a.controls.showCategory=!0,!d.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&h&&(h.properties.useClassificationPanelInput||h.properties.useRightPanelInput)&&s(h.properties),a.$apply()}}),a.$watch("controls.value",function(a){$(f).find('input[type="number"]').val(a).slider().slider("refresh")}),r(a,h)}function n(a){var f=d.get("uniqueProperty");a.controls.uniqueProperty=f,a.controls.properties.id=f+a.controls.properties.id,a.controls.labelPrefix=d.get("tabHierarchyHeadings");var g=b.getTabOptions(a.controls.properties.tabId);a.$watch("controls.value",function(b,f){if(void 0!==b&&""!==b){var h={controlId:a.controls.properties.id,label:a.controls.properties.label,type:a.controls.type,valueLabel:a.controls.value,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren,control:a.controls};u(h),c.addControl(a.controls.properties.id,h),a.controls.showCategory=!0,t(h,g),e.setSpecifiClassificationDetails(h,g.properties),!d.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&g&&(g.properties.useClassificationPanelInput||g.properties.useRightPanelInput)&&s(g.properties)}else c.hasControl(a.controls.properties.id)&&c.removeControl(a.controls.properties.id),a.controls.showCategory=!1,d.setRecentlySelectedControlDetails(void 0)}),r(a,g)}function o(a){d.set("SliderCount",d.get("SliderCount")+1),void 0===a.controls.properties.id&&(a.controls.properties.id="ToggleSwitch"+d.get("SliderCount")),(void 0===a.controls.properties.label||""===a.controls.properties.label)&&(a.controls.properties.label=d.get("TextLabel")),d.set("TextLabel","");var f=d.get("uniqueProperty");a.controls.uniqueProperty=angular.isDefined(f)?f:"",a.controls.properties.id=a.controls.uniqueProperty+a.controls.properties.id,a.controls.labelPrefix=d.get("tabHierarchyHeadings");var g=b.getTabOptions(a.controls.properties.tabId);a.controls.value="false",a.$watch("controls.value",function(b,f){if("true"===b&&"false"===f){var h={controlId:a.controls.properties.id,label:a.controls.properties.label,type:a.controls.type,valueLabel:a.controls.properties.label1,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren};u(h),c.addControl(a.controls.properties.id,h),a.controls.showCategory=!0,t(h,g),e.setSpecifiClassificationDetails(h,g.properties),!d.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&g&&(g.properties.useClassificationPanelInput||g.properties.useRightPanelInput)&&s(g.properties)}else"false"===b&&(c.removeControl(a.controls.properties.id),a.controls.showCategory=!1,d.setRecentlySelectedControlDetails(void 0))}),r(a,g)}function p(a,f){d.set("SelectMenuCount",d.get("SelectMenuCount")+1),void 0===a.controls.properties.id&&(a.controls.properties.id="SelectMenu"+d.get("SelectMenuCount")),a.controls.labelPrefix=d.get("tabHierarchyHeadings"),a.controls.properties.options&&a.controls.properties.options.children&&(a.controls.previousValue=a.controls.value=a.controls.defaultValue=a.controls.properties.options.children[0].value,a.controls.previousValueLabel=a.controls.valueLabel=a.controls.defaultValueLabel=a.controls.properties.options.children[0].text);var g=b.getTabOptions(a.controls.properties.tabId);f.on("change","select.control",function(b){var f=$(this).val(),h=$('option[value="'+f+'"]:selected',$(this)).text();if(f!==a.controls.previousValue&&f!==a.controls.defaultValue||h!==a.controls.previousValueLabel&&h!==a.controls.defaultValueLabel){a.controls.previousValue=a.controls.value,a.controls.previousValueLabel=a.controls.valueLabel,a.controls.value=f,a.controls.valueLabel=h;var i={controlId:a.controls.properties.id,label:a.controls.properties.label||a.controls.properties.options.label,type:a.controls.type,valueLabel:a.controls.valueLabel,labelPrefix:a.controls.labelPrefix,value:a.controls.value,categoriesInfo:a.controls.categorieschildren};u(i),c.addControl(a.controls.properties.id,i),a.controls.showCategory=!0,t(i,g),e.setSpecifiClassificationDetails(i,g.properties),!d.getIsControlsValuesBeingSet()&&a.controls.attachCategories&&g&&g.properties.inputPanelToUseInDiagnoseTab&&!g.properties.selectSpecificClassification&&s(g.properties.inputPanelToUseInDiagnoseTab)}else c.removeControl(a.controls.properties.id),a.controls.showCategory=!1,d.setRecentlySelectedControlDetails(void 0);a.$digest()}),r(a,g)}function q(a){var b=a.controls,c=b.properties&&b.properties.rows?b.properties.rows:1;void 0===b.properties&&(b.properties={}),b.properties.uiClass=GridBuilder.getGridClass(b.children,c),GridBuilder.setGridControlLabels(b)}function r(a,b){if(a.controls.attachCategories&&b&&b.properties.inputPanelToUseInDiagnoseTab&&!a.controls.categorieschildren){var c=angular.copy(b.categories[0].categorieschildren);updateId(a.controls.properties.id,d.get("uniqueProperty"),c),d.get("ClassificationDataAdded").push({controlId:a.controls.properties.id,uniqueProperty:d.get("uniqueProperty"),classification:c}),a.controls.categorieschildren=c}}function s(a){var b;a.useClassificationPanelInput?b="leftpanel":a.useRightPanelInput&&(b="rightpanel"),$("#"+b).panel("open"),$("#closePanelButton").removeClass("ui-btn-active")}function t(a,b){b&&b.properties.useClassificationPanelInput?d.setRecentlySelectedControlDetails(a):b&&b.properties.useRightPanelInput&&f.setPanelData("right",a)}function u(a){var b=(a.labelPrefix?a.labelPrefix:"")+(a.label?(a.labelPrefix?" : ":"")+a.label:"")+(a.heirarchyLabels&&a.heirarchyLabels.length>0?" : "+a.heirarchyLabels.join(" : "):"");a.controlLabel=b}var v={};return v.processHierarchyLabelsForContainer=g,v.processHierarchyLabelsForControl=i,v.processRadioGroup=j,v.processCheckboxGroup=k,v.processCheckbox=l,v.processSlider=m,v.processTextInput=n,v.processToggleSwitch=o,v.processSelectMenu=p,v.processGrid=q,v.openPanel=s,v}angular.module("controls-module").service("DirectiveHelperService",a),a.$inject=["ControlsService","TabOptionsDataService","SelectedControlsService","SharedDataService","specificClassificationService","panelDataService"]}();
//# sourceMappingURL=DirectiveHelperService.js.map
/* Min file (c) */
!function(){function a(){function a(a,b){return b.selectSpecificClassification?angular.extend(a,{selectSpecificClassification:b.selectSpecificClassification,selectSpecificClassificationCategory:b.selectSpecificClassificationCategory}):a}var b=this;b.setSpecifiClassificationDetails=a}angular.module("controls-module").service("specificClassificationService",a)}();
//# sourceMappingURL=controls.specific-classification.service.js.map
/* Min file (c) */
!function(){function a(){function a(){return l}function b(a,b){l.selectedControls[a]=b}function c(a){delete l.selectedControls[a]}function d(a){return angular.isDefined(l.selectedControls[a])}function e(){return l.selectedControls}function f(){var a={};return angular.forEach(l.selectedControls,function(b,c){a[c]=b}),a}function g(a){l.selectedControls=a}function h(){l.selectedControls={}}function i(a){angular.forEach(l.selectedControls,function(b,c){var d=j(a,c);console.log(d),null!==d&&(l.selectedControls[c].control=d)})}function j(a,b){if(angular.isArray(a)){for(var c=0;c<a.length;c++){var d=a[c];if(d.properties&&d.properties.id===b)return d;if(d.children)return j(d.children,b)}return foundControl}return a.properties&&a.properties.id===b?a:a.children?j(a.children,b):null}var k={},l={selectedControls:{}};return k.getValues=a,k.addControl=b,k.removeControl=c,k.hasControl=d,k.getSelectedControls=e,k.getSelectedControlsCopy=f,k.setSelectedControls=g,k.clearSelectedControls=h,k.updateSelectedControls=i,k}angular.module("selected-controls-module",[]).service("SelectedControlsService",a)}();
//# sourceMappingURL=SelectedControlsService.js.map
/* Min file (c) */
!function(){function a(a,b,c){function d(){f=e.model={listName:"",listNameEdit:!1,section:"",selectedListIndex:null},f.controlsServiceValues=a.getServiceValues(),f.listSectionServiceValues=b.getServiceValues()}var e=this,f=e.model={};d(),e.createList=function(){if(""===f.listName)return void c.setMessage(c.ENTER_LIST_NAME_MSG);var b=f.listSectionServiceValues.selectedSection;return""===f.listSectionServiceValues.selectedSection?void c.setMessage(c.SELECT_SECTION_MSG):-1===a.createList(f.listName,void 0,b)?void c.setMessage(c.LIST_EXISTS_MSG):void 0},e.onChangeSection=function(){},e.onRemoveList=function(b){b.stopPropagation(),null!==f.selectedListIndex&&(a.removeList(f.selectedListIndex),e.selectedListName="")},e.onSelectList=function(){f.selectedListIndex=_.pluck(f.controlsServiceValues.lists,"listName").indexOf(e.selectedListName)},e.loadList=function(){null!==f.selectedListIndex&&(a.setSelectedList(f.selectedListIndex),f.listName=a.getSelectedList().listName,f.listNameEdit=!0)},e.saveListName=function(){a.setSelecedListName(f.listName)},e.cancelSaveListName=function(){f.listNameEdit=!1}}angular.module("list-section-module",["notifications-module","controls-module"]).controller("CreateListController",a),a.$inject=["ControlsService","ListSectionService","NotificationsService"]}();
//# sourceMappingURL=CreateListController.js.map
/* Min file (c) */
!function(){function a(a,b,c,d){function e(){g.errorMsg="",g.itemLabel="",g.itemType="",g.selectedControlsType="",g.listSectionServiceValues=d.getServiceValues()}var f=this,g=f.model={};e(),f.add=function(){var d=a.getSelectedItemScope();if(null===d)return void b.setMessage(b.SELECT_CONTAINER_MSG);var e=d.$modelValue;if(!a.isContainer(e.type))return void b.setMessage(b.SELECT_CONTAINER_MSG);if(""===g.itemLabel)return void b.setMessage(b.ENTER_ITEM_LABEL_MSG);b.resetMessage();var f=a.getSelected().list.section;a.addNewSubItem(e,g.itemLabel,g.itemType,f),c(function(){},1)},f.duplicate=function(){a.duplicateSelectedItem()}}angular.module("list-section-module").controller("CreateListItemController",a),a.$inject=["ControlsService","NotificationsService","$timeout","ListSectionService"]}();
//# sourceMappingURL=CreateListItemController.js.map
/* Min file (c) */
!function(){function a(a,b){changedPathsArray=[],a.serviceValues=b.getServiceValues(),a.saveChanges=function(){angular.forEach(changedPathsArray,function(b,c){_.deepSet(a.serviceValues.selected.item,b.path,b.value)}),b.persistData(),changedPathsArray.splice(0,changedPathsArray.length-1)},a.onChangeValue=function(b,c){if(changedPathsArray.length>0){var d=(a.serviceValues.selected.item.fieldsInfo,_.pluck(changedPathsArray,"path").indexOf(b));-1===d?changedPathsArray.push({path:b,value:c}):changedPathsArray[d].value=c}else changedPathsArray.push({path:b,value:c})}}angular.module("list-section-module").controller("PropertiesController",a),a.$inject=["$scope","ControlsService"]}();
//# sourceMappingURL=PropertiesController.js.map
/* Min file (c) */
!function(){function a(){function a(){return c}var b={},c={selectedSection:"",sectionsDetails:[{section:"diagnose",sectionName:"Diagnose Section"},{section:"categories",sectionName:"Categories Section"}],controlsOptions:{categories:[{value:"CategoriesButtons",displayName:"CategoriesButtons"}],diagnose:[{value:"SelectMenu",displayName:"SelectMenu"},{value:"Option",displayName:"Option"},{value:"Tabs",displayName:"Tabs"},{value:"TabRoot",displayName:"TabRoot"},{value:"Checkbox",displayName:"Checkbox"},{value:"CheckboxGroup",displayName:"Checkbox Group"},{value:"RadioButton",displayName:"Radio Button"},{value:"RadioGroup",displayName:"Radio Group"},{value:"Div",displayName:"Div"},{value:"Slider",displayName:"Slider"},{value:"Content",displayName:"Content"},{value:"ToggleSwitch",displayName:"Toggle Switch"},{value:"TextInput",displayName:"Text Input"},{value:"Collapsible",displayName:"Collapsible"},{value:"CollapsibleSet",displayName:"CollapsibleSet"},{value:"Text",displayName:"Text"}]}};return b.getServiceValues=a,b}angular.module("list-section-module").service("ListSectionService",a),a.$inject=[]}();
//# sourceMappingURL=ListSectionService.js.map
/* Min file (c) */
!function(){function a(a,b,c){var d=this;d.listName="";var e=d.model={fileFormat:"csv"};d.importAction=function(){var c=b.importData(e.fileFormat);void 0!==c&&c.then(function(b){b.controls.length>0&&a.createList(b.listName,b.controls[0],b.section)})},d.exportAction=function(){var c=a.getSelected().list;if(console.log("listToExport: ",c),null===c||null===c.controls)return void NS.setMessage(NS.SELECT_CONTAINER_MSG);var f=a.getChildNodeAttr(c.section);d.exportData=b.exportData(c,f,e.fileFormat);var g={"Export.csv":{data:"\n",type:"text/csv"},"Export.json":{type:"text/json"}},h="Export.csv";"json"===e.fileFormat&&(h="Export.json"),g[h].data=d.exportData;var i=new File([g[h].data],h,{type:g[h].type,lastModified:Date.now()}),j=URL.createObjectURL(i,{oneTimeOnly:!0}),k=document.createElement("a");k.href=j,k.download=h,k.textContent=h,$("#filesForDownload").html(k)}}angular.module("import-export-module",[]).controller("ImportExportController",a),a.$inject=["ControlsService","ImportExportService","$scope"]}();
//# sourceMappingURL=ImportExportController.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b){function c(b){var c=b.split("\n"),d=0,e=[],f=null,g="children",h=[],i=0;return angular.forEach(c,function(b,c){var l=b.split(j);if(l=_.map(l,function(a){return-1===a.indexOf("\r")?a:a.replace("\r","")}),0===c)return k.listName=l[0].split(":")[1],k.section=l[1].split(":")[1],void(g=l[2].split(":")[1]);if(l.length<4)return void console.log("Invalid record: ",l);var m=parseInt(l[3]);if(m!==d&&m!==d+1&&m>d)return void console.log("Invalid record: ",l);0===m&&(e.splice(0,e.length),e.push(k.controls));for(var n=l[1],o=!1,p={};-1!==h.indexOf(n);)n+=i++,o=!0;h.push(n),p.properties={id:n,label:l[0],text:l[0],heading:l[0]};var q=l[2];if(angular.isDefined(q)&&(p.type=l[2],p.fieldsInfo=a.generate(p.type,p.properties),null!==p.fieldsInfo&&(p=$.extend(!0,{},a.getStructure(),p))),l.length>4){p.fieldsInfo=[];for(var c=4;c<l.length;c++){var r=l[c].split(":"),s=r[0],t=parseInt(r[1]),u=r[2];if(isNaN(t)&&console.log("Invalid Type: ",t),-1!==s.indexOf("properties.")){t===a.types.BOOLEAN&&(u="true"===u?!0:!1);var v=s.split(".")[1];"id"===v&&o&&(u=n);var w={fieldName:v,fieldPath:s,fieldValue:u,fieldType:t};if(t===a.types.SELECT&&r.length>3){w.fieldOptions=[];for(var x=3;x<r.length;x++){var y=r[x].split("~");w.fieldOptions.push({display:y[0],value:y[1]})}}p.fieldsInfo.push(w),_.deepSet(p,s,u)}else console.log("Not property")}}if(m===d)if(0===m)k.controls.push(p);else{var z=e.length-1,A=e[z];A.push(p)}else if(m===d+1)angular.isUndefined(f[g])&&(f[g]=[],e.push(f[g])),f[g].push(p);else if(d>m){var B=d-m;if(e.splice(e.length-B,B),0===m)k.controls.push(p);else{var z=e.length-1,A=e[z];A.push(p)}}f=p,d=m}),k}function d(a){var b=JSON.parse(a);return k.listName=b.listName,k.section=b.section,k.controls=b.children[0].children,k}function e(a){k.controls=[];var e=b.defer(),f=".js-import-file",g=$(f)[0].files[0];if(void 0===g)return void console.log("No File selected");var h=new FileReader;return h.onload=function(b){"csv"===a?c(b.target.result):d(b.target.result),e.resolve(k)},h.readAsText(g),e.promise}function f(b,c,d){var e=[];return angular.forEach(b,function(b){var g=[];g.push(b.properties?b.properties.label:b.type),g.push(b.properties?b.properties.id:"placeholderId"),g.push(b.type),g.push(c),angular.forEach(b.fieldsInfo,function(b,c){var d=b.fieldPath+":"+b.fieldType+":"+b.fieldValue;b.fieldType===a.types.SELECT&&b.fieldOptions.length>0&&angular.forEach(b.fieldOptions,function(a,b){d+=":"+a.display+"~"+a.value}),g.push(d)}),g[g.length-1]+="\r\n",e.push(g.join(j)),angular.isDefined(b[d])&&Array.prototype.push.apply(e,f(b[d],c+1,d))}),e}function g(a){var b={type:"Design",listName:a.listName,section:a.section,zone:null,children:[{type:"Page",properties:{id:"page1"},children:a.controls}]};return b}function h(a,b,c){if("csv"===c){var d=[];return d.push("ListName:"+a.listName+j),d.push("ListSection:"+a.section+j),d.push("ChildAttribute:"+b),d[d.length-1]+="\r\n",Array.prototype.push.apply(d,f(a.controls,0,b)),d.join("")}return"json"===c?JSON.stringify(g(a)):void 0}var i={},j=";",k={controls:[],listName:"",section:""};return i.importData=e,i.processExportJSONData=g,i.exportData=h,i}angular.module("import-export-module").service("ImportExportService",a),a.$inject=["FieldsGeneratorService","$q"]}();
//# sourceMappingURL=ImportExportService.js.map
/* Min file (c) */
!function(){"use strict";function a(a,b,c,d,e,f){var g=a.model={};g.controlsServiceValues=d.getServiceValues(),a.options={dragStart:function(a){},remove:function(a){console.log("remove"),d.persistData()},dropped:function(a){console.log("dropped"),g.selectedItemScope=a.source.nodeScope,g.controlsServiceValues.selected.item=a.source.nodeScope.$modelValue,d.setSelectedItemScope(g.selectedItemScope),d.persistData(),f.setMessage(f.SELECTED_MSG,a.source.nodeScope.$modelValue.type),c(function(){},1)}},a.toggle=function(a){a.toggle(),d.persistData()},a.isContainer=function(a){return d.isContainer(a)}}angular.module("controlsTree").controller("ControlsTreeController",a),a.$inject=["$scope","$q","$timeout","ControlsService","DirectiveCreateService","NotificationsService"]}();
//# sourceMappingURL=ControlsTreeController.js.map
/* Min file (c) */
!function(){angular.module("jqm-components-module",[])}();
//# sourceMappingURL=jqm-components.module.js.map
/* Min file (c) */
!function(){function a(){var a={restrict:"AE",transclude:!0,templateUrl:"Components/JqmComponentsModule/jqm-components.jqm-collapsible.template.html",scope:{title:"@"},link:function(a,b,c){a.showContent=!1,b.find(" > .ui-collapsible > .ui-collapsible-heading > a").on("click",function(b){a.showContent=!a.showContent,a.$apply()})}};return a}angular.module("jqm-components-module").directive("jqmCollapsible",a)}();
//# sourceMappingURL=jqm-components.jqm-collapsible.directive.js.map
/* Min file (c) */
"use strict";!function(){function a(){var a={restrict:"AE",transclude:!0,templateUrl:"Components/JqmComponentsModule/jqm-components.jqm-fieldset.template.html",scope:{controlDetail:"="}};return a}angular.module("jqm-components-module").directive("jqmFieldset",a)}();
//# sourceMappingURL=jqm-components.jqm-fieldset.directive.js.map
/* Min file (c) */
!function(){function a(){var a={restrict:"AE",transclude:!0,templateUrl:"Components/JqmComponentsModule/jqm-components.jqm-checkbox.template.html",scope:{id:"@",model:"=",value:"@",isDisabled:"="},link:function(a,b,c){angular.isUndefined(a.model)&&(a.model=!1),angular.isUndefined(a.value)&&(a.value=""),angular.isDefined(c.first)&&b.find("label").addClass("ui-first-child"),angular.isDefined(c.last)&&b.find("label").addClass("ui-last-child"),b.find(".ui-checkbox").on("click",function(b){a.model=!a.model,a.$apply(),b.stopPropagation()})}};return a}angular.module("jqm-components-module").directive("jqmCheckbox",a)}();
//# sourceMappingURL=jqm-components.jqm-checkbox.directive.js.map
/* Min file (c) */
"use strict";!function(){function a(){var a={restrict:"AE",transclude:!0,templateUrl:"Components/JqmComponentsModule/jqm-components.jqm-radiobutton.template.html",scope:{value:"@"},link:function(a,b,c){angular.isDefined(c.first)&&b.find("label").addClass("ui-first-child"),angular.isDefined(c.last)&&b.find("label").addClass("ui-last-child"),b.find("label").on("click",function(b){a.$parent.$parent.controlDetail.statusValue=a.value,a.$apply()})}};return a}angular.module("jqm-components-module").directive("jqmRadiobutton",a)}();
//# sourceMappingURL=jqm-components.jqm-radiobutton.directive.js.map
/* Min file (c) */
"use strict";!function(){function a(){var a={restrict:"AE",transclude:!0,templateUrl:"Components/JqmComponentsModule/jqm-components.jqm-radiobutton1.template.html",scope:{value:"@",onClick:"&"},link:function(a,b,c){angular.isDefined(c.first)&&b.find("label").addClass("ui-first-child"),angular.isDefined(c.last)&&b.find("label").addClass("ui-last-child"),a.onRadioButtonClick=function(){a.$parent.$parent.controlDetail=a.value,console.log("onRadioButtonClick"),a.onClick&&a.onClick()}}};return a}angular.module("jqm-components-module").directive("jqmRadiobuttonOne",a)}();
//# sourceMappingURL=jqm-components.jqm-radiobutton1.directive.js.map